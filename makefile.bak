# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: xamayuel <xamayuel@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2022/05/06 14:14:12 by xamayuel          #+#    #+#              #
#    Updated: 2024/02/15 15:12:07 by javigarc         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

# ************************ STRUCTURE ***************************************** #
# - .objs --> folder with object files
# - src ---> folder with source files
# - libraries --> folder with library files *.a
# - includes --> folder with *.h files
# **************************************************************************** #
NAME = minishell
SRC_DIR = src
OBJ_DIR = .objs
LIBRARIES_DIR = libraries
LIBFT_DIR = src/libft
LEXER_DIR = src/lexer
PARSER_DIR = src/parser
EXPANSER_DIR = src/expanser
EXECUTER_DIR = src/executer
LEXER = $(LIBRARIES_DIR)/lexer.a
LIBFT = $(LIBRARIES_DIR)/libft.a
PARSER = $(LIBRARIES_DIR)/parser.a
EXPANSER = $(LIBRARIES_DIR)/expanser.a
EXECUTER = $(LIBRARIES_DIR)/executer.a
# ------------- COLORS 
# https://talyian.github.io/ansicolors/
RESET			= 	\033[0m
GREEN 			= 	\033[38;5;46m
WHITE 			= 	\033[38;5;15m
GREY 			= 	\033[38;5;8m
ORANGE 			= 	\033[38;5;202m
RED 			= 	\033[38;5;160m
PINK			=   \033[38;5;162m
LIGHT_PINK      =   \033[38;5;200m
BLUE			= 	\033[38;5;39m
DARK_BLUE		=   \033[38;5;57m
# -----------------SRC
SRC =	$(SRC_DIR)/minishell_main.c \
		$(SRC_DIR)/minishell_signals.c \
		$(SRC_DIR)/minishell_prompt.c \
		$(SRC_DIR)/minishell_lexer_and_parser.c \
		$(SRC_DIR)/minishell_shell_init.c
	
SRC2 = $(SRC_DIR)/open.c
OBJ = $(patsubst $(SRC_DIR)%.c, $(OBJ_DIR)%.o, $(SRC))

CC = gcc

HEAD = -I./includes \
	   -I./$(LIBFT_DIR) \
	   -I /Users/javigarc/.brew/opt/readline/include \
	   -I /Users/$(USER)/.brew/opt/readline/include

CFLAGS = -Wall -Werror -Wextra #-g -fsanitize=address
LFLAGS = -L . $(LIBFT) \
		 -L . $(LEXER) \
		 -L . $(PARSER) \
		 -L . $(EXPANSER) \
		 -L . $(EXECUTER) \
		 -lreadline -L /Users/$(USER)/.brew/opt/readline/lib #-lft

# Address sanitizing flags
ASAN := -fsanitize=address -fsanitize-recover=address
ASAN += -fno-omit-frame-pointer -fno-common
ASAN += -fsanitize=pointer-subtract -fsanitize=pointer-compare
# Technicaly UBSan but works with ASan
ASAN += -fsanitize=undefined
# Technicaly LSan but works with ASan
# ASAN += -fsanitize=leak
# Thread sanitizing flags
TSAN := -fsanitize=thread
# Memory sanitizing flags
MSAN := -fsanitize=memory -fsanitize-memory-track-origins
RM = /bin/rm -rf

all: $(NAME)
bonus: all

$(NAME): $(OBJ) libraries libft lexer expanser parser executer
		
		$(CC) $(OBJ) $(HEAD) $(CFLAGS) $(LFLAGS)  -o $(NAME)
		#$(CC) $(OBJ) $(HEAD) $(CFLAGS) $(LFLAGS) $(ASAN) -o $(NAME)
		clear
		@echo "$(LIGHT_PINK)╔════════════════════════════════════╗"
		@echo "$(LIGHT_PINK)║  ${PINK} 😊🐰 MINISHELL COMPLETE  🐰😊    ║"
		@echo "$(LIGHT_PINK)╚════════════════════════════════════╝ $(RESET)"

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
		@mkdir -p $(OBJ_DIR)
		@echo "$(GREY)Compiling.............................$(ORANGE)$(<F)"
		@$(CC) $(CFLAGS) $(HEAD)  -c $< -o $@
		@echo "$(GREEN)DONE!$(GREY)"
		@sleep .2

libraries:
	mkdir -p libraries
libft:
		@make -C $(LIBFT_DIR)
		
lexer:
		@make -C $(LEXER_DIR)

parser:
		@make -C $(PARSER_DIR)

expanser:
		@make -C $(EXPANSER_DIR)

executer:
		@make -C $(EXECUTER_DIR)
clean:
		@$(RM) $(OBJ_DIR)
		sleep .1
		clear

fclean: clean
		@$(RM) libraries/*.a
		@$(RM) $(NAME)
		sleep .1
		clear
		@echo "$(BLUE)╔════════════════════════════════════╗"
		@echo "$(BLUE)║          ${DARK_BLUE} 🗑️  ALL CLEAN 🗑️ ${BLUE}          ║"
		@echo "$(BLUE)╚════════════════════════════════════╝ $(RESET)"

re: fclean all

.PONY: all clean fclean re debug_mac debug_linux

manual:
	open https://cdn.intra.42.fr/pdf/pdf/35831/es.subject.pdf

installation: 
		@echo "$(BLUE)╔════════════════════════════════════╗"
		@echo "$(BLUE)║ ${DARK_BLUE} 🗑️  INSTALLATION COMPLETE 🗑️ ${BLUE}       ║"
		@echo "$(BLUE)╚════════════════════════════════════╝ $(RESET)"
brew:
	curl -fsSL https://raw.githubusercontent.com/docgloucester/42homebrew_sgoinfre/master/install.sh | zsh

readline:
	brew install readline
